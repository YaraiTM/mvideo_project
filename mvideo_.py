import streamlit as st
import pandas as pd
import numpy as np
import scipy
import scipy.stats as sts
import matplotlib.pyplot as plt

# Считываем файл
data = pd.read_csv("mvideo_file.csv", delimiter="\t")
st.write('Данные по работникам')
st.write(data)

# Открываем его
with open('mvideo_file.csv', 'rb') as f:
   st.download_button('Download CSV', f, file_name='Workers.csv')

# Проверка на пропущенные значения
for column in data.columns:
    missing = np.mean(data[column].isna()*100)
    st.write(f" {column} : {round(missing, 1)}%")

# Проверка на наличие выбросов
plt.subplot(1,2,1)
plt.boxplot(data['Количество больничных дней'])
plt.title('Количество больничных дней')
plt.subplot(1,2,2)
plt.boxplot(data['Возраст'])
plt.title('Возраст')
plt.subplots_adjust(wspace=0.5)
st.pyplot()

# Проверка на наличие неверных данных
st.write("Проверка столбца Пол на наличие неверных данных:", data['Пол'].unique())
st.write("*Пропусков и серьезных выбросов не обнаружено*", '\n')

# Устанавливаем ползунок выбора возраста и количества пропущенных дней
age = st.slider('Выберите возраст (age)', int(data['Возраст'].min()), int(data['Возраст'].max()))
work_days = st.slider('Выберите количество дней (work_days)', 0, int(data['Количество больничных дней'].max()))


# Начинаем проверку первой гипотезы
st.write("## Нулевая гипотеза: Мужчины и женщины пропускают одинаково")

# Считаем количество работников, удовлетворяющих условиям
st.write("Количество МУЖЧИН, пропустивших более", work_days, "дней =", len(data[(data['Пол']=='М') & (data['Количество больничных дней']>work_days)]))
st.write("Количество ЖЕНЩИН, пропустивших более", work_days, "дней =", len(data[(data['Пол']=='Ж') & (data['Количество больничных дней']>work_days)]))

# Высчитываем наименьшее значение длины выборки
a = len(data[(data['Пол']=='М') & (data['Количество больничных дней']>work_days)])
b = len(data[(data['Пол']=='Ж') & (data['Количество больничных дней']>work_days)])
min_val = min(a, b)

# Уравниваем две выборки, выбирая количество строк равное меньшему значению длины выборки
m2 = data[(data['Пол']=='М') & (data['Количество больничных дней']>work_days)]
_m2_ = m2['Количество больничных дней']
m2_ = _m2_.sample(n=min_val)

# Визуализируем гистограмму распределения
plt.subplot(1,2,1)
plt.hist(m2_)
plt.xlabel('Количество дней')
plt.ylabel('Количество человек')
plt.title('Мужчины')


# Уравниваем две выборки, выбирая количество строк равное меньшему значению длины выборки
f2 = data[(data['Пол']=='Ж') & (data['Количество больничных дней']>work_days)]
_f2_ = f2['Количество больничных дней']
f2_ = _f2_.sample(n=min_val)

# Визуализируем гистограмму распределения
plt.subplot(1,2,2)
plt.hist(f2_)
plt.xlabel('Количество дней')
plt.ylabel('Количество человек')
plt.title('Женщины')
plt.subplots_adjust(wspace=0.5)
st.pyplot()

# Производим проверку данных на нормальность распределения
norm_m = sts.shapiro(m2_)
norm_f = sts.shapiro(f2_)

# Смотрим результаты проверки на нормальность
st.write("Проверка на нормальное распределение МУЖЧИН", norm_m)
st.write("*Результат проверки: В выборке отсутствует нормальное распределение*")
st.write("Проверка на нормальное распределение ЖЕНЩИН", norm_f)
st.write("*Результат проверки: В выборке отсутствует нормальное распределение*")

# Проверяем гипотезу
mw = sts.mannwhitneyu(m2_, f2_)
st.write("Поскольку распределение отличается от нормального, проведем по Манну-Уитни", mw, '\n')
st.write("# Ответ: Поскольку p-value больше 0.05, то нет оснований отвергнуть нулевую гипотезу")



# Начинаем проверку второй гипотезы
st.write("## Нулевая гипотеза: Старше 35 лет и младше пропускают одинаково")

# Считаем количество работников, удовлетворяющих условиям
st.write("Количество сотрудников, СТАРШЕ", age,"лет и пропустивших более", work_days, "дней =", len(data[(data['Возраст']>age) & (data['Количество больничных дней']>work_days)]))
st.write("Количество сотрудников, МЛАДШЕ (или ровно)", age,"лет и пропустивших более", work_days, "дней =", len(data[(data['Возраст']<=age) & (data['Количество больничных дней']>work_days)]))

# Высчитываем наименьшее значение длины выборки
a = len(data[(data['Возраст']>age) & (data['Количество больничных дней']>work_days)])
b = len(data[(data['Возраст']<=age) & (data['Количество больничных дней']>work_days)])
min_val = min(a,b)

# Уравниваем две выборки, выбирая количество строк равное меньшему значению длины выборки
old = data[(data['Возраст']>age) & (data['Количество больничных дней']>work_days)]
_old_ = old['Количество больничных дней']
old_ = _old_.sample(n=min_val)

# Визуализируем гистограмму распределения
plt.subplot(1,2,1)
plt.hist(old_)
plt.xlabel('Количество дней')
plt.ylabel('Количество человек')
plt.title('Старше 35 лет')

# Уравниваем две выборки, выбирая количество строк равное меньшему значению длины выборки
young = data[(data['Возраст']<=age) & (data['Количество больничных дней']>work_days)]
_young_ = young['Количество больничных дней']
young_ = _young_.sample(n=min_val)

# Визуализируем гистограмму распределения
plt.subplot(1,2,2)
plt.hist(young_)
plt.xlabel('Количество дней')
plt.ylabel('Количество человек')
plt.title('Мледше или ровно 35 лет')
plt.subplots_adjust(wspace=0.5)
st.pyplot()

# Производим проверку данных на нормальность распределения
norm_o = sts.shapiro(old_)
norm_y = sts.shapiro(young_)

# Смотрим результаты проверки на нормальность
st.write("Проверка на нормальное распределение СТАРШИХ", norm_o)
st.write("*Результат проверки: В выборке отсутствует нормальное распределение*")
st.write("Проверка на нормальное распределение МЛАДШИХ", norm_y)
st.write("*Результат проверки: В выборке отсутствует нормальное распределение*")

# Проверяем гипотезу
mw2 = sts.mannwhitneyu(old_, young_)
st.write("Поскольку распределение отличается от нормального, проведем по Манну-Уитни", mw2)
st.write("# Ответ: Поскольку p-value больше 0.05, то нет оснований отвергнуть нулевую гипотезу")